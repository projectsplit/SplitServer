name: Deploy Test

on:
  workflow_dispatch:

run-name: Deploy Test ${{ github.ref_name }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SERVER_APP_DIR: /home/user/buqs/test/api
      APP_PORT: 5098
      DOCKER_REPO: ghcr.io/projectsplit/splitserver
      CONTAINER_NAME: test-splitserver

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            TAG=${{ github.ref_name }}
            echo $TAG
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd ${{ env.SERVER_APP_DIR }}
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true
            docker pull ${{ env.DOCKER_REPO }}:$TAG
            docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              --network host \
              -p ${{ env.APP_PORT }}:${{ env.APP_PORT }} \
              -v $(pwd)/appsettings.Test.json:/app/appsettings.Test.json \
              -e ASPNETCORE_URLS="http://0.0.0.0:${{ env.APP_PORT }}" \
              -e ASPNETCORE_ENVIRONMENT=Test \
              --restart always \
              ${{ env.DOCKER_REPO }}:$TAG
            docker images ${{ env.DOCKER_REPO }} --format '{{.Repository}}:{{.Tag}}' | grep -v -F -x -f <(docker ps -q | xargs -n 1 docker inspect --format '{{.Config.Image}}') | xargs -r docker rmi
